# Generated by Django 4.0.5 on 2022-08-27 13:23

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_delete_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='FolOrderBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Webshop_Id', models.TextField()),
                ('Order_Total', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Source', models.TextField()),
                ('Source_Name', models.TextField()),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.DateField()),
                ('Billing_Email', models.TextField()),
                ('Billing_Country', models.TextField()),
                ('Billing_City', models.TextField()),
                ('Billing_Last_Name', models.TextField()),
                ('Billing_First_Name', models.TextField()),
                ('Shipping_Method', models.TextField()),
                ('Payment_Method', models.TextField()),
                ('Discount_Value', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
                ('Payment_Status', models.TextField()),
                ('Warehouse', models.TextField()),
                ('Tags', models.TextField()),
                ('Created_by', models.TextField()),
                ('Assigned_User', models.TextField(blank=True, null=True)),
                ('Completed_Date', models.DateField()),
            ],
            options={
                'db_table': 'fol_order_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolOrderEtc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Row_Type', models.TextField()),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Default_Supplier_Unit_Price', models.TextField()),
                ('Default_Supplier_Currency', models.TextField()),
                ('Quantity', models.TextField()),
                ('Unit_Price', models.TextField()),
                ('Discount', models.TextField()),
                ('Tax', models.TextField()),
                ('Subtotal', models.TextField()),
                ('Cogs', models.TextField()),
                ('Margin', models.TextField()),
                ('MarginPercent', models.TextField(db_column='Margin_')),
                ('Item_Note', models.TextField()),
                ('Weight', models.TextField()),
                ('Webshop_Id', models.TextField()),
                ('Order_Total', models.TextField()),
                ('Currency', models.TextField()),
                ('Source', models.TextField()),
                ('Source_Name', models.TextField()),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.TextField()),
                ('Memo', models.TextField()),
                ('Billing_Email', models.TextField()),
                ('Billing_Address_1', models.TextField()),
                ('Billing_Address_2', models.TextField()),
                ('Billing_Country', models.TextField()),
                ('Billing_City', models.TextField()),
                ('Billing_Zip_Code', models.TextField()),
                ('Billing_Last_Name', models.TextField()),
                ('Billing_First_Name', models.TextField()),
                ('Billing_Tax_Number', models.TextField()),
                ('Billing_Company', models.TextField()),
                ('Manual_Invoicing', models.TextField()),
                ('Manual_Proforma', models.TextField()),
                ('Shipping_Email', models.TextField()),
                ('Shipping_Address_1', models.TextField()),
                ('Shipping_Address_2', models.TextField()),
                ('Shipping_Country', models.TextField()),
                ('Shipping_City', models.TextField()),
                ('Shipping_Zip_Code', models.TextField()),
                ('Shipping_Last_Name', models.TextField()),
                ('Shipping_First_Name', models.TextField()),
                ('Shipping_Company', models.TextField()),
                ('Delivery_Note', models.TextField()),
                ('Shipping_Method', models.TextField()),
                ('Payment_Method', models.TextField()),
                ('Discount_Value', models.TextField()),
                ('Exchange_Rate', models.TextField()),
                ('Payment_Status', models.TextField()),
                ('Warehouse', models.TextField()),
                ('Delivery_Date', models.TextField()),
                ('Proforma_Invoice_Id', models.TextField()),
                ('Proforma_Invoice_Id_2', models.TextField()),
                ('Invoice_Id', models.TextField()),
                ('Reverse_Invoice_Id', models.TextField()),
                ('Prepayment_Reverse_Invoice_Id', models.TextField()),
                ('Prepayment_Invoice_Id_2', models.TextField()),
                ('Tags', models.TextField()),
                ('Customer_classes', models.TextField()),
                ('Created_by', models.TextField()),
                ('Assigned_User', models.TextField()),
                ('Default_Customer_Class', models.TextField()),
                ('Completed_Date', models.TextField()),
            ],
            options={
                'db_table': 'fol_order_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolOrderFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.IntegerField()),
                ('Product_Name', models.IntegerField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.IntegerField()),
                ('Order_Status', models.IntegerField()),
                ('Order_Date', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_order_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Discount', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Subtotal', models.IntegerField()),
                ('Cogs', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
                ('Weight', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_order_shipping_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolOrderShippingFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_order_shipping_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolReturnOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Weight', models.IntegerField()),
                ('Order_Total', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_return_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolReturnOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Discount', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Subtotal', models.IntegerField()),
                ('Cogs', models.IntegerField()),
                ('Weight', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_return_order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolReturnOrderShippingFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'fol_return_order_shipping_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolStockAging',
            fields=[
                ('index', models.BigIntegerField(blank=True, primary_key=True, serialize=False)),
                ('sku', models.TextField(blank=True, null=True)),
                ('shipment', models.BigIntegerField(blank=True, null=True)),
                ('shipment_now', models.BigIntegerField(blank=True, null=True)),
                ('current_stock', models.BigIntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('age', models.BigIntegerField(blank=True, null=True)),
                ('weighted_archimetric_mean', models.FloatField(blank=True, null=True)),
                ('shipment_supplier_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fol_stock_aging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FolStockTransactionReport',
            fields=[
                ('operation_identifier', models.TextField(blank=True, db_column='Operation_identifier', primary_key=True, serialize=False)),
                ('product', models.TextField(blank=True, db_column='Product', null=True)),
                ('warehouse', models.TextField(blank=True, db_column='Warehouse', null=True)),
                ('operation_status', models.TextField(blank=True, db_column='Operation_status', null=True)),
                ('operation_item_status', models.TextField(blank=True, db_column='Operation_item_status', null=True)),
                ('operation_direction', models.TextField(blank=True, db_column='Operation_direction', null=True)),
                ('quantity', models.BigIntegerField(blank=True, db_column='Quantity', null=True)),
                ('done_quantity', models.BigIntegerField(blank=True, db_column='Done_quantity', null=True)),
                ('before_quantity', models.FloatField(blank=True, db_column='Before_quantity', null=True)),
                ('after_quantity', models.FloatField(blank=True, db_column='After_quantity', null=True)),
                ('reason', models.TextField(blank=True, db_column='Reason', null=True)),
                ('item_notes', models.CharField(blank=True, db_column='Item_notes', max_length=255, null=True)),
                ('related_identifier', models.TextField(blank=True, db_column='Related_identifier', null=True)),
                ('assigned_user', models.TextField(blank=True, db_column='Assigned_user', null=True)),
                ('created', models.TextField(blank=True, db_column='Created', null=True)),
                ('finished', models.TextField(blank=True, db_column='Finished', null=True)),
                ('cancelled', models.FloatField(blank=True, db_column='Cancelled', null=True)),
                ('cancelled_by', models.FloatField(blank=True, db_column='Cancelled_by', null=True)),
                ('shipment_supplier_name', models.TextField(blank=True, db_column='Shipment_supplier_name', null=True)),
                ('is_dynamic', models.TextField(blank=True, db_column='Is_dynamic', null=True)),
            ],
            options={
                'db_table': 'fol_stock_transaction_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProOrderBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Webshop_Id', models.TextField()),
                ('Order_Total', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Source', models.TextField()),
                ('Source_Name', models.TextField()),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.DateField()),
                ('Billing_Email', models.TextField()),
                ('Billing_Country', models.TextField()),
                ('Billing_City', models.TextField()),
                ('Billing_Last_Name', models.TextField()),
                ('Billing_First_Name', models.TextField()),
                ('Shipping_Method', models.TextField()),
                ('Payment_Method', models.TextField()),
                ('Discount_Value', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
                ('Payment_Status', models.TextField()),
                ('Warehouse', models.TextField()),
                ('Tags', models.TextField()),
                ('Created_by', models.TextField()),
                ('Assigned_User', models.TextField(blank=True, null=True)),
                ('Completed_Date', models.DateField()),
            ],
            options={
                'db_table': 'Pro_order_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProOrderEtc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Row_Type', models.TextField()),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Default_Supplier_Unit_Price', models.TextField()),
                ('Default_Supplier_Currency', models.TextField()),
                ('Quantity', models.TextField()),
                ('Unit_Price', models.TextField()),
                ('Discount', models.TextField()),
                ('Tax', models.TextField()),
                ('Subtotal', models.TextField()),
                ('Cogs', models.TextField()),
                ('Margin', models.TextField()),
                ('MarginPercent', models.TextField(db_column='Margin_')),
                ('Item_Note', models.TextField()),
                ('Weight', models.TextField()),
                ('Webshop_Id', models.TextField()),
                ('Order_Total', models.TextField()),
                ('Currency', models.TextField()),
                ('Source', models.TextField()),
                ('Source_Name', models.TextField()),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.TextField()),
                ('Memo', models.TextField()),
                ('Billing_Email', models.TextField()),
                ('Billing_Address_1', models.TextField()),
                ('Billing_Address_2', models.TextField()),
                ('Billing_Country', models.TextField()),
                ('Billing_City', models.TextField()),
                ('Billing_Zip_Code', models.TextField()),
                ('Billing_Last_Name', models.TextField()),
                ('Billing_First_Name', models.TextField()),
                ('Billing_Tax_Number', models.TextField()),
                ('Billing_Company', models.TextField()),
                ('Manual_Invoicing', models.TextField()),
                ('Manual_Proforma', models.TextField()),
                ('Shipping_Email', models.TextField()),
                ('Shipping_Address_1', models.TextField()),
                ('Shipping_Address_2', models.TextField()),
                ('Shipping_Country', models.TextField()),
                ('Shipping_City', models.TextField()),
                ('Shipping_Zip_Code', models.TextField()),
                ('Shipping_Last_Name', models.TextField()),
                ('Shipping_First_Name', models.TextField()),
                ('Shipping_Company', models.TextField()),
                ('Delivery_Note', models.TextField()),
                ('Shipping_Method', models.TextField()),
                ('Payment_Method', models.TextField()),
                ('Discount_Value', models.TextField()),
                ('Exchange_Rate', models.TextField()),
                ('Payment_Status', models.TextField()),
                ('Warehouse', models.TextField()),
                ('Delivery_Date', models.TextField()),
                ('Proforma_Invoice_Id', models.TextField()),
                ('Proforma_Invoice_Id_2', models.TextField()),
                ('Invoice_Id', models.TextField()),
                ('Reverse_Invoice_Id', models.TextField()),
                ('Prepayment_Reverse_Invoice_Id', models.TextField()),
                ('Prepayment_Invoice_Id_2', models.TextField()),
                ('Tags', models.TextField()),
                ('Customer_classes', models.TextField()),
                ('Created_by', models.TextField()),
                ('Assigned_User', models.TextField()),
                ('Default_Customer_Class', models.TextField()),
                ('Completed_Date', models.TextField()),
            ],
            options={
                'db_table': 'Pro_order_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProOrderFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.IntegerField()),
                ('Product_Name', models.IntegerField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.IntegerField()),
                ('Order_Status', models.IntegerField()),
                ('Order_Date', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_order_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Discount', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Subtotal', models.IntegerField()),
                ('Cogs', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.IntegerField()),
                ('Exchange_Rate', models.IntegerField()),
                ('Weight', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_order_shipping_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProOrderShippingFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Status', models.TextField()),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_order_shipping_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProReturnOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Weight', models.IntegerField()),
                ('Order_Total', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_return_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProReturnOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Sku', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Discount', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Subtotal', models.IntegerField()),
                ('Cogs', models.IntegerField()),
                ('Weight', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_return_order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProReturnOrderShippingFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_Id', models.TextField()),
                ('Product_Name', models.TextField()),
                ('Quantity', models.IntegerField()),
                ('Unit_Price', models.IntegerField()),
                ('Tax', models.IntegerField()),
                ('Currency', models.CharField(max_length=3)),
                ('Order_Date', models.DateField()),
                ('Exchange_Rate', models.IntegerField()),
            ],
            options={
                'db_table': 'Pro_return_order_shipping_fee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProStockAging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('sku', models.TextField(blank=True, null=True)),
                ('shipment', models.BigIntegerField(blank=True, null=True)),
                ('shipment_now', models.BigIntegerField(blank=True, null=True)),
                ('current_stock', models.BigIntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('age', models.BigIntegerField(blank=True, null=True)),
                ('weighted_archimetric_mean', models.FloatField(blank=True, null=True)),
                ('shipment_supplier_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Pro_stock_aging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProStockTransactionReport',
            fields=[
                ('operation_identifier', models.TextField(blank=True, db_column='Operation_identifier', primary_key=True, serialize=False)),
                ('product', models.TextField(blank=True, db_column='Product', null=True)),
                ('warehouse', models.TextField(blank=True, db_column='Warehouse', null=True)),
                ('operation_status', models.TextField(blank=True, db_column='Operation_status', null=True)),
                ('operation_item_status', models.TextField(blank=True, db_column='Operation_item_status', null=True)),
                ('operation_direction', models.TextField(blank=True, db_column='Operation_direction', null=True)),
                ('quantity', models.BigIntegerField(blank=True, db_column='Quantity', null=True)),
                ('done_quantity', models.BigIntegerField(blank=True, db_column='Done_quantity', null=True)),
                ('before_quantity', models.FloatField(blank=True, db_column='Before_quantity', null=True)),
                ('after_quantity', models.FloatField(blank=True, db_column='After_quantity', null=True)),
                ('reason', models.TextField(blank=True, db_column='Reason', null=True)),
                ('item_notes', models.CharField(blank=True, db_column='Item_notes', max_length=255, null=True)),
                ('related_identifier', models.TextField(blank=True, db_column='Related_identifier', null=True)),
                ('assigned_user', models.TextField(blank=True, db_column='Assigned_user', null=True)),
                ('created', models.TextField(blank=True, db_column='Created', null=True)),
                ('finished', models.TextField(blank=True, db_column='Finished', null=True)),
                ('cancelled', models.FloatField(blank=True, db_column='Cancelled', null=True)),
                ('cancelled_by', models.FloatField(blank=True, db_column='Cancelled_by', null=True)),
                ('shipment_supplier_name', models.TextField(blank=True, db_column='Shipment_supplier_name', null=True)),
                ('is_dynamic', models.TextField(blank=True, db_column='Is_dynamic', null=True)),
            ],
            options={
                'db_table': 'Pro_stock_transaction_report',
                'managed': False,
            },
        ),
    ]
