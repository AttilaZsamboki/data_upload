FROM python:3.11.4

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Install cron and dos2unix
RUN apt-get update && apt-get install -y cron dos2unix

# Create necessary directories
RUN mkdir -p /app/logs

# Copy application files
COPY . /app/

RUN dos2unix /app/crontab.sh
RUN chmod +x /app/crontab.sh

# Convert scripts to Unix format and make executable
RUN find /app -type f -name "*.py" -exec dos2unix {} \;
RUN find /app -type f -name "*.py" -exec chmod +x {} \;
  
# Add ARG directives for each build-time variable
ARG GOOGLE_CREDENTIALS
ARG DB_HOST
ARG DB_NAME
ARG DB_PASS
ARG DB_PORT
ARG DB_USER

# Map ARGs to ENV variables
ENV DB_HOST=$DB_HOST
ENV DB_NAME=$DB_NAME
ENV DB_PASS=$DB_PASS
ENV DB_PORT=$DB_PORT
ENV DB_USER=$DB_USER
ENV GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS

RUN printenv > '/app/envs.env'

# Set up crontab
RUN echo '0 0 * * * /app/crontab.sh /app/stock_aging.py >> /app/logs/stock_aging.log 2>&1' > /etc/cron.d/app-cron
RUN echo '0 0 * * 0 /app/crontab.sh /app/forgási_sebesség.py >> /app/logs/forgasi_sebesseg.log 2>&1' >> /etc/cron.d/app-cron
RUN echo '0 0 * * THU /app/crontab.sh /app/foliasjuci/outlet.py >> /app/logs/outlet.log 2>&1' >> /etc/cron.d/app-cron
RUN echo '0 0 * * MON /app/crontab.sh /app/foliasjuci/outlet.py >> /app/logs/outlet.log 2>&1' >> /etc/cron.d/app-cron
RUN echo '0 0 * * * /app/crontab.sh /app/foliasjuci/inventory_history.py >> /app/logs/inventory_history.log 2>&1' > /etc/cron.d/app-cron
RUN echo '0 0 * * * /app/crontab.sh /app/foliasjuci/terv_teny.py 2>&1 | while read -r line; do echo "$(date "+%Y-%m-%d %H:%M:%S") $line"; done >> /app/logs/terv_teny.log' >> /etc/cron.d/app-cron
RUN echo '0 0 * * * /app/crontab.sh /app/foliasjuci/last_pieces.py >> /app/logs/last_pieces.log 2>&1' >> /etc/cron.d/app-cron

# Give execution rights on the cron job
RUN chmod 0644 /etc/cron.d/app-cron

# Apply cron job
RUN crontab /etc/cron.d/app-cron

# Start cron in foreground
CMD ["cron", "-f"]
