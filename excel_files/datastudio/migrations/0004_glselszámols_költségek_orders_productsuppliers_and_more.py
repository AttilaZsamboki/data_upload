# Generated by Django 4.0.6 on 2022-07-08 07:35

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('datastudio', '0003_databaseconnections_port_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GlsElszámols',
            fields=[
                ('csomagszam', models.TextField(blank=True, db_column='Csomagszam', primary_key=True, serialize=False)),
                ('ugyfel_hivatkozas_field', models.TextField(blank=True, db_column='Ugyfel_hivatkozas_', null=True)),
                ('utanvet_hivatkozas_field', models.TextField(blank=True, db_column='Utanvet_hivatkozas_', null=True)),
                ('utanvet_osszege', models.FloatField(blank=True, db_column='Utanvet_osszege', null=True)),
                ('felvetel_datuma_field', models.DateTimeField(blank=True, db_column='Felvetel_datuma_', null=True)),
                ('kiszallitas_napja', models.DateTimeField(blank=True, db_column='Kiszallitas_napja', null=True)),
                ('celorszag_field', models.TextField(blank=True, db_column='Celorszag_', null=True)),
                ('suly', models.FloatField(blank=True, db_column='Suly', null=True)),
                ('kapcsolt_szolgaltatasok', models.TextField(blank=True, db_column='Kapcsolt_szolgaltatasok', null=True)),
                ('futar_koltseg', models.FloatField(blank=True, db_column='Futar_koltseg', null=True)),
                ('cimzett_neve_field', models.TextField(blank=True, db_column='Cimzett_neve_', null=True)),
                ('kiszallitasi_cim_field', models.TextField(blank=True, db_column='Kiszallitasi_cim_', null=True)),
                ('atvevo_neve_field', models.TextField(blank=True, db_column='Atvevo_neve_', null=True)),
                ('logisztika', models.FloatField(blank=True, null=True)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'gls_elszámolás',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Költségek',
            fields=[
                ('azonosito', models.TextField(primary_key=True, serialize=False)),
                ('honap', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('partner', models.TextField(blank=True, null=True)),
                ('koltsegelem', models.TextField(blank=True, null=True)),
                ('ar', models.FloatField(blank=True, null=True)),
                ('penznem', models.TextField(blank=True, null=True)),
                ('atvaltasi_rata', models.BigIntegerField(blank=True, null=True)),
                ('afa_field', models.BigIntegerField(blank=True, db_column='afa_', null=True)),
                ('osszesen_huf', models.FloatField(blank=True, null=True)),
                ('netto_ossz', models.FloatField(blank=True, null=True)),
                ('afa_ertek', models.FloatField(blank=True, null=True)),
                ('tipus', models.TextField(blank=True, null=True)),
                ('penztarca', models.TextField(blank=True, null=True)),
                ('koltseg_osztaly', models.TextField(blank=True, null=True)),
                ('iktatasi_allapot', models.TextField(blank=True, null=True)),
                ('szamla_sorszama', models.FloatField(blank=True, null=True)),
                ('tranzakcio_uzenet', models.TextField(blank=True, null=True)),
                ('tranzakcio_partner_fiok', models.TextField(blank=True, null=True)),
                ('tranzakcio_beszallito_neve', models.TextField(blank=True, null=True)),
                ('tranzakcio_tipusa', models.TextField(blank=True, null=True)),
                ('teljesites_datuma', models.DateField(blank=True, null=True)),
                ('megjegyzesek', models.TextField(blank=True, null=True)),
                ('tranzakcio_belso_azonosito', models.TextField(blank=True, null=True)),
                ('tranzakcio_kulso_azonosito', models.TextField(blank=True, null=True)),
                ('megjegyzesek2', models.TextField(blank=True, null=True)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'költségek',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_type', models.TextField(blank=True, db_column='Row_Type', null=True)),
                ('order_id', models.TextField(blank=True, db_column='Order_Id', null=True)),
                ('sku', models.TextField(blank=True, db_column='Sku', null=True)),
                ('product_name', models.TextField(blank=True, db_column='Product_Name', null=True)),
                ('default_supplier_unit_price', models.TextField(blank=True, db_column='Default_Supplier_Unit_Price', null=True)),
                ('default_supplier_currency', models.TextField(blank=True, db_column='Default_Supplier_Currency', null=True)),
                ('quantity', models.FloatField(blank=True, db_column='Quantity', null=True)),
                ('unit_price', models.FloatField(blank=True, db_column='Unit_Price', null=True)),
                ('discount', models.FloatField(blank=True, db_column='Discount', null=True)),
                ('tax', models.FloatField(blank=True, db_column='Tax', null=True)),
                ('subtotal', models.FloatField(blank=True, db_column='Subtotal', null=True)),
                ('cogs', models.FloatField(blank=True, db_column='Cogs', null=True)),
                ('margin', models.FloatField(blank=True, db_column='Margin', null=True)),
                ('margin_field', models.FloatField(blank=True, db_column='Margin_', null=True)),
                ('item_note', models.TextField(blank=True, db_column='Item_Note', null=True)),
                ('weight', models.FloatField(blank=True, db_column='Weight', null=True)),
                ('webshop_id', models.TextField(blank=True, db_column='Webshop_Id', null=True)),
                ('order_total', models.FloatField(blank=True, db_column='Order_Total', null=True)),
                ('currency', models.TextField(blank=True, db_column='Currency', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_name', models.TextField(blank=True, db_column='Source_Name', null=True)),
                ('order_status', models.TextField(blank=True, db_column='Order_Status', null=True)),
                ('order_date', models.DateField(blank=True, db_column='Order_Date', null=True)),
                ('memo', models.TextField(blank=True, db_column='Memo', null=True)),
                ('billing_email', models.TextField(blank=True, db_column='Billing_Email', null=True)),
                ('billing_address_1', models.TextField(blank=True, db_column='Billing_Address_1', null=True)),
                ('billing_address_2', models.TextField(blank=True, db_column='Billing_Address_2', null=True)),
                ('billing_country', models.TextField(blank=True, db_column='Billing_Country', null=True)),
                ('billing_city', models.TextField(blank=True, db_column='Billing_City', null=True)),
                ('billing_zip_code', models.TextField(blank=True, db_column='Billing_Zip_Code', null=True)),
                ('billing_last_name', models.TextField(blank=True, db_column='Billing_Last_Name', null=True)),
                ('billing_first_name', models.TextField(blank=True, db_column='Billing_First_Name', null=True)),
                ('billing_tax_number', models.TextField(blank=True, db_column='Billing_Tax_Number', null=True)),
                ('billing_company', models.TextField(blank=True, db_column='Billing_Company', null=True)),
                ('manual_invoicing', models.BooleanField(blank=True, db_column='Manual_Invoicing', null=True)),
                ('manual_proforma', models.BooleanField(blank=True, db_column='Manual_Proforma', null=True)),
                ('shipping_email', models.TextField(blank=True, db_column='Shipping_Email', null=True)),
                ('shipping_address_1', models.TextField(blank=True, db_column='Shipping_Address_1', null=True)),
                ('shipping_address_2', models.TextField(blank=True, db_column='Shipping_Address_2', null=True)),
                ('shipping_country', models.TextField(blank=True, db_column='Shipping_Country', null=True)),
                ('shipping_city', models.TextField(blank=True, db_column='Shipping_City', null=True)),
                ('shipping_zip_code', models.TextField(blank=True, db_column='Shipping_Zip_Code', null=True)),
                ('shipping_last_name', models.TextField(blank=True, db_column='Shipping_Last_Name', null=True)),
                ('shipping_first_name', models.TextField(blank=True, db_column='Shipping_First_Name', null=True)),
                ('shipping_company', models.TextField(blank=True, db_column='Shipping_Company', null=True)),
                ('delivery_note', models.TextField(blank=True, db_column='Delivery_Note', null=True)),
                ('shipping_method', models.TextField(blank=True, db_column='Shipping_Method', null=True)),
                ('payment_method', models.TextField(blank=True, db_column='Payment_Method', null=True)),
                ('discount_value', models.FloatField(blank=True, db_column='Discount_Value', null=True)),
                ('exchange_rate', models.BigIntegerField(blank=True, db_column='Exchange_Rate', null=True)),
                ('payment_status', models.TextField(blank=True, db_column='Payment_Status', null=True)),
                ('warehouse', models.TextField(blank=True, db_column='Warehouse', null=True)),
                ('delivery_date', models.DateField(blank=True, db_column='Delivery_Date', null=True)),
                ('proforma_invoice_id', models.TextField(blank=True, db_column='Proforma_Invoice_Id', null=True)),
                ('proforma_invoice_id_2', models.TextField(blank=True, db_column='Proforma_Invoice_Id_2', null=True)),
                ('invoice_id', models.TextField(blank=True, db_column='Invoice_Id', null=True)),
                ('reverse_invoice_id', models.TextField(blank=True, db_column='Reverse_Invoice_Id', null=True)),
                ('prepayment_reverse_invoice_id', models.TextField(blank=True, db_column='Prepayment_Reverse_Invoice_Id', null=True)),
                ('prepayment_invoice_id_2', models.TextField(blank=True, db_column='Prepayment_Invoice_Id_2', null=True)),
                ('tags', models.TextField(blank=True, db_column='Tags', null=True)),
                ('customer_classes', models.TextField(blank=True, db_column='Customer_classes', null=True)),
                ('created_by', models.TextField(blank=True, db_column='Created_by', null=True)),
                ('assigned_user', models.TextField(blank=True, db_column='Assigned_User', null=True)),
                ('default_customer_class', models.TextField(blank=True, db_column='Default_Customer_Class', null=True)),
                ('completed_date', models.DateField(blank=True, db_column='Completed_Date', null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.TextField(blank=True, db_column='Product_Name', null=True)),
                ('sku', models.TextField(blank=True, db_column='SKU', null=True)),
                ('supplier_1_name', models.TextField(blank=True, db_column='Supplier___1___Name', null=True)),
                ('supplier_1_net_price', models.FloatField(blank=True, db_column='Supplier___1___Net_Price', null=True)),
                ('supplier_1_vat', models.TextField(blank=True, db_column='Supplier___1___VAT', null=True)),
                ('supplier_1_vat_field', models.FloatField(blank=True, db_column='Supplier___1___VAT_', null=True)),
                ('supplier_1_currency', models.TextField(blank=True, db_column='Supplier___1___Currency', null=True)),
                ('supplier_1_barcode', models.FloatField(blank=True, db_column='Supplier___1___Barcode', null=True)),
                ('supplier_1_reference', models.TextField(blank=True, db_column='Supplier___1___Reference', null=True)),
                ('supplier_1_product_name', models.TextField(blank=True, db_column='Supplier___1___Product_Name', null=True)),
                ('supplier_1_minimum_order_quantity', models.FloatField(blank=True, db_column='Supplier___1___Minimum_Order_Quantity', null=True)),
                ('supplier_1_unit_of_measurement', models.FloatField(blank=True, db_column='Supplier___1___Unit_of_Measurement', null=True)),
                ('supplier_1_package_size', models.FloatField(blank=True, db_column='Supplier___1___Package_Size', null=True)),
                ('supplier_1_lead_time', models.FloatField(blank=True, db_column='Supplier___1___Lead_Time', null=True)),
                ('supplier_1_days_of_stock', models.FloatField(blank=True, db_column='Supplier___1___Days_of_Stock', null=True)),
                ('supplier_1_safety_stock', models.FloatField(blank=True, db_column='Supplier___1___Safety_Stock', null=True)),
                ('supplier_1_default', models.FloatField(blank=True, db_column='Supplier___1___Default', null=True)),
                ('supplier_1_note', models.FloatField(blank=True, db_column='Supplier___1___Note', null=True)),
                ('supplier_2_name', models.TextField(blank=True, db_column='Supplier___2___Name', null=True)),
                ('supplier_2_net_price', models.FloatField(blank=True, db_column='Supplier___2___Net_Price', null=True)),
                ('supplier_2_vat', models.TextField(blank=True, db_column='Supplier___2___VAT', null=True)),
                ('supplier_2_vat_field', models.FloatField(blank=True, db_column='Supplier___2___VAT_', null=True)),
                ('supplier_2_currency', models.TextField(blank=True, db_column='Supplier___2___Currency', null=True)),
                ('supplier_2_barcode', models.FloatField(blank=True, db_column='Supplier___2___Barcode', null=True)),
                ('supplier_2_reference', models.TextField(blank=True, db_column='Supplier___2___Reference', null=True)),
                ('supplier_2_product_name', models.TextField(blank=True, db_column='Supplier___2___Product_Name', null=True)),
                ('supplier_2_minimum_order_quantity', models.FloatField(blank=True, db_column='Supplier___2___Minimum_Order_Quantity', null=True)),
                ('supplier_2_unit_of_measurement', models.FloatField(blank=True, db_column='Supplier___2___Unit_of_Measurement', null=True)),
                ('supplier_2_package_size', models.FloatField(blank=True, db_column='Supplier___2___Package_Size', null=True)),
                ('supplier_2_lead_time', models.FloatField(blank=True, db_column='Supplier___2___Lead_Time', null=True)),
                ('supplier_2_days_of_stock', models.FloatField(blank=True, db_column='Supplier___2___Days_of_Stock', null=True)),
                ('supplier_2_safety_stock', models.FloatField(blank=True, db_column='Supplier___2___Safety_Stock', null=True)),
                ('supplier_2_default', models.FloatField(blank=True, db_column='Supplier___2___Default', null=True)),
                ('supplier_2_note', models.FloatField(blank=True, db_column='Supplier___2___Note', null=True)),
            ],
            options={
                'db_table': 'product_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReport',
            fields=[
                ('id', models.BigIntegerField(blank=True, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('sku', models.TextField(blank=True, null=True)),
                ('on_stock', models.BigIntegerField(blank=True, null=True)),
                ('layers_warehouse', models.TextField(blank=True, null=True)),
                ('on_stock_layer', models.FloatField(blank=True, null=True)),
                ('net_price', models.FloatField(blank=True, null=True)),
                ('landed_cost_layer', models.FloatField(blank=True, null=True)),
                ('inventory_value_layer', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('sales', models.BigIntegerField(blank=True, null=True)),
                ('index', models.IntegerField()),
            ],
            options={
                'db_table': 'stock_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Számlák',
            fields=[
                ('szamla_belso_azonosito', models.TextField(db_column='Szamla_belso_azonosito', primary_key=True, serialize=False)),
                ('szamla_azonosito', models.TextField(blank=True, db_column='Szamla_azonosito', null=True)),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('hatarido', models.TextField(blank=True, db_column='Hatarido', null=True)),
                ('fizetes_datuma', models.TextField(blank=True, db_column='Fizetes_datuma', null=True)),
                ('teljesites_datuma', models.TextField(blank=True, db_column='Teljesites_datuma', null=True)),
                ('tipus', models.TextField(blank=True, db_column='Tipus', null=True)),
                ('fizetesi_allapot', models.TextField(blank=True, db_column='Fizetesi_allapot', null=True)),
                ('iktatasi_allapot', models.TextField(blank=True, db_column='Iktatasi_Allapot', null=True)),
                ('expired', models.BooleanField(blank=True, db_column='Expired', null=True)),
                ('partner', models.TextField(blank=True, db_column='Partner', null=True)),
                ('szallitmanyok', models.TextField(blank=True, db_column='Szallitmanyok', null=True)),
                ('koltseg', models.FloatField(blank=True, db_column='Koltseg', null=True)),
                ('penznem', models.TextField(blank=True, db_column='Penznem', null=True)),
                ('atvaltasi_rata', models.FloatField(blank=True, db_column='Atvaltasi_rata', null=True)),
                ('osszesen_huf', models.FloatField(blank=True, db_column='Osszesen_HUF', null=True)),
                ('pdf', models.TextField(blank=True, db_column='PDF', null=True)),
                ('fizetesi_mod', models.TextField(blank=True, db_column='Fizetesi_mod', null=True)),
                ('megjegyzes', models.TextField(blank=True, db_column='Megjegyzes', null=True)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'számlák',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cikkszam', models.TextField(blank=True, null=True)),
                ('termek_nev', models.TextField(blank=True, null=True)),
                ('netto_ar', models.FloatField(blank=True, null=True)),
                ('brutto_ar', models.FloatField(blank=True, null=True)),
                ('parameter_minosegtext', models.TextField(blank=True, db_column='Parameter_Minosegtext', null=True)),
                ('parameter_kiszerelesenum', models.TextField(blank=True, db_column='Parameter_Kiszerelesenum', null=True)),
                ('parameter_szintext', models.TextField(blank=True, db_column='Parameter_Szintext', null=True)),
                ('parameter_1_m2_feluletheztext', models.TextField(blank=True, db_column='Parameter_1_m2_feluletheztext', null=True)),
                ('parameter_csaladtext', models.TextField(blank=True, db_column='Parameter_Csaladtext', null=True)),
                ('parameter_kategoriatext', models.TextField(blank=True, db_column='Parameter_Kategoriatext', null=True)),
                ('parameter_teli_hangulat_mintatext', models.TextField(blank=True, db_column='Parameter_Teli_hangulat_mintatext', null=True)),
                ('parameter_szelessegtext', models.TextField(blank=True, db_column='Parameter_Szelessegtext', null=True)),
                ('parameter_hossztext', models.TextField(blank=True, db_column='Parameter_Hossztext', null=True)),
                ('parameter_merettext', models.TextField(blank=True, db_column='Parameter_Merettext', null=True)),
                ('parameter_ablakfolia_tipustext', models.TextField(blank=True, db_column='Parameter_Ablakfolia_tipustext', null=True)),
                ('parameter_belathatosagtext', models.TextField(blank=True, db_column='Parameter_Belathatosagtext', null=True)),
                ('parameter_felhelyezestext', models.TextField(blank=True, db_column='Parameter_Felhelyezestext', null=True)),
                ('parameter_felulettext', models.TextField(blank=True, db_column='Parameter_Felulettext', null=True)),
                ('parameter_hovisszaverestext', models.TextField(blank=True, db_column='Parameter_Hovisszaverestext', null=True)),
                ('parameter_koporetegtext', models.TextField(blank=True, db_column='Parameter_Koporetegtext', null=True)),
                ('parameter_ontapados_padlopadlotext', models.TextField(blank=True, db_column='Parameter_Ontapados_padloPadlotext', null=True)),
                ('parameter_padlo_tipusapadlotext', models.TextField(blank=True, db_column='Parameter_Padlo_tipusaPadlotext', null=True)),
                ('parameter_uv_vedelemtext', models.TextField(blank=True, db_column='Parameter_UV_vedelemtext', null=True)),
                ('parameter_vastagsagtext', models.TextField(blank=True, db_column='Parameter_Vastagsagtext', null=True)),
                ('parameter_csomag_kiszerelesenum', models.TextField(blank=True, db_column='Parameter_Csomag_kiszerelesenum', null=True)),
                ('parameter_video_segitsegvideokhtml', models.FloatField(blank=True, db_column='Parameter_Video_segitsegVideokhtml', null=True)),
                ('parameter_vip_artext', models.FloatField(blank=True, db_column='Parameter_VIP_artext', null=True)),
                ('parameter_m2_doboztext', models.TextField(blank=True, db_column='Parameter_m2/doboztext', null=True)),
                ('parameter_m2_tekercstext', models.TextField(blank=True, db_column='Parameter_m2/tekercstext', null=True)),
                ('parameter_m2_csomagtext', models.FloatField(blank=True, db_column='Parameter_m2/csomagtext', null=True)),
                ('parameter_felhelyezes_nehezsegetext', models.FloatField(blank=True, db_column='Parameter_Felhelyezes_nehezsegetext', null=True)),
                ('parameter_eltavolithatotext', models.TextField(blank=True, db_column='Parameter_Eltavolithatotext', null=True)),
                ('parameter_illesztestext', models.TextField(blank=True, db_column='Parameter_Illesztestext', null=True)),
                ('parameter_tisztitasatext', models.TextField(blank=True, db_column='Parameter_Tisztitasatext', null=True)),
                ('parameter_elofizetestext', models.FloatField(blank=True, db_column='Parameter_ELOFIZETEStext', null=True)),
                ('parameter_konzultacioenum', models.TextField(blank=True, db_column='Parameter_Konzultacioenum', null=True)),
                ('parameter_brandtext', models.TextField(blank=True, db_column='Parameter_brandtext', null=True)),
                ('parameter_eantext', models.FloatField(blank=True, db_column='Parameter_eantext', null=True)),
                ('parameter_mpntext', models.TextField(blank=True, db_column='Parameter_mpntext', null=True)),
                ('parameter_lepesmelysegtext', models.TextField(blank=True, db_column='Parameter_Lepesmelysegtext', null=True)),
                ('parameter_lehajlo_peremtext', models.TextField(blank=True, db_column='Parameter_Lehajlo_peremtext', null=True)),
                ('parameter_aremelestext', models.FloatField(blank=True, db_column='Parameter_Aremelestext', null=True)),
                ('number_1_alkategoria', models.TextField(blank=True, db_column='1_alkategoria', null=True)),
                ('number_2_alkategoria', models.TextField(blank=True, db_column='2_alkategoria', null=True)),
                ('number_3_alkategoria', models.TextField(blank=True, db_column='3_alkategoria', null=True)),
                ('number_4_alkategoria', models.TextField(blank=True, db_column='4_alkategoria', null=True)),
                ('number_5_alkategoria', models.TextField(blank=True, db_column='5_alkategoria', null=True)),
            ],
            options={
                'db_table': 'unas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bevételek',
            fields=[
                ('azonosito', models.TextField(blank=True, db_column='Azonosito', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('teljesites_datuma', models.TextField(blank=True, db_column='Teljesites_datuma', null=True)),
                ('ar', models.FloatField(blank=True, db_column='Ar', null=True)),
                ('penznem', models.TextField(blank=True, db_column='Penznem', null=True)),
                ('atvaltasi_rata', models.BigIntegerField(blank=True, db_column='Atvaltasi_rata', null=True)),
                ('afa_field', models.BigIntegerField(blank=True, db_column='AFA_', null=True)),
                ('osszesen_huf', models.FloatField(blank=True, db_column='Osszesen_HUF', null=True)),
                ('netto_ossz', models.FloatField(blank=True, db_column='Netto_ossz', null=True)),
                ('afa_ertek', models.BigIntegerField(blank=True, db_column='AFA_ertek', null=True)),
                ('tipus', models.TextField(blank=True, db_column='Tipus', null=True)),
                ('penztarca', models.TextField(blank=True, db_column='Penztarca', null=True)),
                ('kategoria', models.TextField(blank=True, db_column='Kategoria', null=True)),
                ('eredmeny_kategoria', models.TextField(blank=True, db_column='Eredmeny_kategoria', null=True)),
                ('tranzakcio_uzenet', models.TextField(blank=True, db_column='Tranzakcio_uzenet', null=True)),
                ('tranzakcio_partner_fiok', models.TextField(blank=True, db_column='Tranzakcio_partner_fiok', null=True)),
                ('tranzakcio_beszallito_neve', models.TextField(blank=True, db_column='Tranzakcio_beszallito_neve', null=True)),
                ('tranzakcio_tipusa', models.TextField(blank=True, db_column='Tranzakcio_tipusa', null=True)),
                ('id', models.IntegerField()),
            ],
        ),
    ]
